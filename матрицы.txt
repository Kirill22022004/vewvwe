#define matrix vector<vector<long long>>

const long long mod = 1e9 + 7;

matrix operator* (const matrix& a, const matrix& b) {
    int n = a.size();
    matrix c(n, vector<long long> (n, 0));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            for (int k = 0; k < n; k++) {
                c[i][j] = (c[i][j] + a[i][k] * b[k][j]) % mod;
            }
        }
    }
    return c;
}

void print(const matrix& a) {
    int n = a.size();
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
}

matrix pow(matrix a, long long m) {
    int n = a.size();
    matrix res(n, vector<long long> (n, 0));
    for (int i = 0; i < n; i++) res[i][i] = 1;
    while (m) {
        if (m & 1ll) {
            res = res * a;
        }
        a = a * a;
        m /= 2ll;
    }
    return res;
}