vector<int> eratosfen(int n) {
    vector<int> d(n + 1, 1);
    vector<int> prime;
    for (int i = 2; i <= n; i++) {
        if (d[i] == 1) {
            d[i] = i;
            prime.push_back(i);
        }
        for (auto x : prime) {
            if (x * i > n || x > d[i]) break;
            d[x * i] = x;
        }
    }
    return d;
}

vector<int> mind; // mind = eratosfen(MAXN);

vector<int> get_factor(int n) {
    vector<int> res;
    while (n > 1) {
        res.push_back(mind[n]);
        n /= mind[n];
    }
    return res;
}