#include<bits/stdc++.h>

using namespace std;

const int MAXN = 1e8 / 2 + 22;
int mind[MAXN], dp[MAXN];
vector<int> prime;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    dp[0] = 1;
    mind[0] = 1;
    for (int i = 1; i <= n; i += 100) {
        long long sum = 0;
        for (int j = i; j <= min(n, i + 99); j++) {
            if (j % 2 == 0) {
                int tmp = 0, x = j;
                while (x % 2 == 0) tmp++, x /= 2;
                sum += dp[x / 2] * (1 << (tmp - 1));
            } else {
                if (mind[j / 2] == 0 && j != 1) {
                    prime.push_back(j);
                    dp[j / 2] = j - 1;
                    mind[j / 2] = j;
                } else if (j != 1) {
                    int x = mind[j / 2];
                    if (j % (x * x) == 0) {
                        dp[j / 2] = dp[j / x / 2] * x;
                    } else {
                        dp[j / 2] = dp[j / x / 2] * (x - 1);
                    }
                }
                sum += dp[j / 2];
                for (auto x : prime) {
                    if (x > mind[j / 2] || x * j > n) break;
                    mind[j * x / 2] = x;
                }
            }
        }
        cout << sum << " ";
    }
}
