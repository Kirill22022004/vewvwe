#include<bits/stdc++.h>

using namespace std;

const int N = 200022;

int a[N], b[N], tmp[N];
queue<int> g[N];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    fill(b, b + N, -1);
    for (int i = 0; i < m; i++) {
        int x;
        cin >> x;
        b[x] = i;
    }
    fill(tmp, tmp + m, n);
    for (int i = n - 1; i >= 0; i--) {
        if (b[a[i]] != -1) {
            int j = b[a[i]];
            g[j].push(i);
            while (j < m) {
                int ok = 0;
                if (j == 0) {
                    tmp[j] = g[j].front();
                    g[j].pop();
                    ok = 1;
                } else {
                    while ((int) g[j].size() > 0 && g[j].front() > tmp[j - 1]) {
                        tmp[j] = g[j].front();
                        g[j].pop();
                        ok = 1;
                    }
                }
                if (!ok) {
                    break;
                }
                j++;
            }
        }
        if (tmp[m - 1] == n) {
            a[i] = -1;
        } else {
            a[i] = tmp[m - 1] + 1;
        }
    }
    for (int i = 0; i < n; i++) {
        cout << a[i] << " ";
    }
}
